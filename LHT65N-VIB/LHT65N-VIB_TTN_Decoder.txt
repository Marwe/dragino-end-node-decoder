function datalog2(i,bytes){
  var aa= parseFloat((bytes[i]<<24>>16 | bytes[i+1])/1000).toFixed(3); 
  var bb= parseFloat((bytes[i+2]<<24>>16 | bytes[i+3])/1000).toFixed(3); 
  var cc= parseFloat((bytes[i+4]<<24>>16 | bytes[i+5])/1000).toFixed(3); 
  var string='[('+ aa +'),'+'('+ bb +'),' +'('+ cc +')]'+',';  
  return string;
}

function Decoder(bytes, port) {
  if(port==0x02)
  {
    var decode = {};
    decode.BatV=(bytes[0]<<8 | bytes[1])/1000;
    var mod=(bytes[2]>>2)&0x07;
    if(mod==1)
    {
      decode.vib_count=(bytes[3]<<8 | bytes[4]<<8 | bytes[5]<<8 | bytes[6])>>>0;
      decode.work_min=(bytes[7]<<8 | bytes[8]<<8 | bytes[9]<<8 | bytes[10])>>>0;
    }
    else if(mod==2)
    {
      decode.vib_count=(bytes[3]<<8 | bytes[4]<<8 | bytes[5]<<8 | bytes[6])>>>0;    
      decode.TempC_SHT=parseFloat(((bytes[7]<<24>>16 | bytes[8])/100).toFixed(2));
      decode.Hum_SHT=parseFloat((((bytes[9]<<8 | bytes[10])&0xFFF)/10).toFixed(1));
    }
    else if(mod==3)
    {
      decode.TempC_SHT=parseFloat(((bytes[3]<<24>>16 | bytes[4])/100).toFixed(2));
      decode.Hum_SHT=parseFloat((((bytes[5]<<8 | bytes[6])&0xFFF)/10).toFixed(1));
      decode.work_min=(bytes[7]<<8 | bytes[8]<<8 | bytes[9]<<8 | bytes[10])>>>0;
    }

    decode.Alarm= (bytes[2] & 0x01)? "TRUE":"FALSE";
    decode.TDC  = (bytes[2] & 0x02)? "YES":"NO";
    
    if(bytes.length==11)
      return decode;
  }
  else if(port==7)
  {
    // var Bat= (bytes[0]<<8 | bytes[1])/1000;
    // for(var k=2;k<bytes.length;k=k+6)
    // {
    //   data= datalog2(k,bytes);
    //   if(k=='2')
    //     data_sum=data;
    //   else
    //     data_sum+=data;
    // }
    // return{
    // Bat_V:Bat,
    // DATALOG:data_sum
    // };    
    
    var Bat= (bytes[0]<<8 | bytes[1])/1000;
    var x_acc= (bytes[2]<<24>>16 | bytes[3]);
    var y_acc= (bytes[4]<<24>>16 | bytes[5]);
    var z_acc= (bytes[6]<<24>>16 | bytes[7]);
    
    return{
    Bat_V:Bat,
    X:x_acc,
    Y:y_acc,
    Z:z_acc,
    };    
  }
}