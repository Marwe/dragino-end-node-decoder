function Decoder(payload, payloadB64) {
    function bytesToHex(bytes) {
        var hex = '';
        for (var i = 0; i < bytes.length; i++) {
            var current = bytes[i] < 0 ? bytes[i] + 256 : bytes[i];
            var hexByte = current.toString(16);
            hex += hexByte.length === 1 ? '0' + hexByte : hexByte;
        }
        return hex;
    }
    function parsePayload(hex) {
        var offset = 0;
        function toInt(hexString, lengthInBits) {
            var value = parseInt(hexString, 16);
            
            if(lengthInBits && (value & (1 << (lengthInBits - 1)))) {  // Check the MSB
                value -= (1 << lengthInBits);  // two's complement conversion
            }
            return value;
        }
        var deviceID = hex.substr(offset, 16); offset += 16;
        var IMSI = hex.substr(offset, 16); offset += 16;
        var versionStr = hex.substr(offset, 4); offset += 4;
        var version = toInt(versionStr) / 100;
        var battery = toInt(hex.substr(offset, 4)) / 1000; offset += 4;
        var signal = toInt(hex.substr(offset, 2)); offset += 2;
        var PA8_status = parseInt(hex.substr(offset, 2), 16); offset += 2;
        var count_mode = (PA8_status >> 5) & 0x01; 
        var tdc_send_flag = (PA8_status >> 4) & 0x01; 
        var trigger_mode = (PA8_status >> 2) & 0x01; 
        var pa8_alarm_status = (PA8_status >> 1) & 0x01; 
        var pa8_level_status = PA8_status & 0x01;
        var TTRchannel = toInt((hex.substr(27, 1)>>3)&0x0F);
        if (TTRchannel == 0)
        {
        var PA8_door_open_num = toInt(hex.substr(offset, 6)); offset += 6;
        var PA8_last_open_time = toInt(hex.substr(offset, 6)); offset += 6;
        var timestamp = toInt(hex.substr(offset, 8)); offset += 8;
        var dataset = [];
        while (offset < hex.length) {
            var PA8_status1 = parseInt(hex.substr(offset, 2), 16); offset += 2;
            var count_mode1 = (PA8_status1 >> 5) & 0x01; 
            var tdc_send_flag1 = (PA8_status1 >> 4) & 0x01; 
            var trigger_mode1 = (PA8_status1 >> 2) & 0x01; 
            var pa8_alarm_status1 = (PA8_status1 >> 1) & 0x01; 
            var pa8_level_status1 = PA8_status1 & 0x01;
            var PA8_door_open_num1 = toInt(hex.substr(offset, 6)); offset += 6;
            var PA8_last_open_time1 = toInt(hex.substr(offset, 6)); offset += 6;
            var timestampLog = toInt(hex.substr(offset, 8)); offset += 8;
            dataset.push({ PA8_status1: PA8_status1,count_mode1: count_mode1,tdc_send_flag1: tdc_send_flag1,trigger_mode1: trigger_mode1,pa8_alarm_status1: pa8_alarm_status1,pa8_level_status1: pa8_level_status1, PA8_door_open_num1: PA8_door_open_num1,PA8_last_open_time1: PA8_last_open_time1, timestamp: timestampLog });
        }
        return {
            deviceID: deviceID,
            IMSI:IMSI,
            version: version,
            battery: battery,
            signal: signal,
            TTRchannel: TTRchannel,
            PA8_status: PA8_status,
            count_mode:count_mode,
            tdc_send_flag:tdc_send_flag,
            trigger_mode:trigger_mode,
            pa8_alarm_status:pa8_alarm_status,
            pa8_level_status:pa8_level_status,
            PA8_door_open_num: PA8_door_open_num,
            PA8_last_open_time: PA8_last_open_time,
            PA8_status1: PA8_status1,
            count_mode1:count_mode1,
            tdc_send_flag1:tdc_send_flag1,
            trigger_mode1:trigger_mode1,
            pa8_alarm_status1:pa8_alarm_status1,
            pa8_level_status1:pa8_level_status1,
            PA8_door_open_num1: PA8_door_open_num1,
            PA8_last_open_time1: PA8_last_open_time1,
            timestamp: timestamp,
            dataset: dataset
        };
    }
        if (TTRchannel == 1)
        {
        var count_time1 = toInt(hex.substr(offset, 6)); offset += 6;
        var count_time2 = toInt(hex.substr(offset, 6)); offset += 6;
        var count_time3 = toInt(hex.substr(offset, 6)) ; offset += 6;
        var timestamp = toInt(hex.substr(offset, 8)); offset += 8;
        var dataset = [];
        while (offset < hex.length) {
            var PA8_status1 = toInt(hex.substr(offset, 2), 16) ; offset += 2;
            var tdc_send_flag = (PA8_status1 >> 4) & 0x01; 
            var trigger_mode = (PA8_status1 >> 2) & 0x01; 
            var pa8_alarm_status = (PA8_status1 >> 1) & 0x01; 
            var pa8_level_status = PA8_status1 & 0x01;
            var PA8_door_open_num1 = toInt(hex.substr(offset, 6)); offset += 6;
            var PA8_last_open_time1 = toInt(hex.substr(offset, 6)); offset += 6;
            var count_time11 = toInt(hex.substr(offset, 6)); offset += 6;
            var count_time22 = toInt(hex.substr(offset, 6)); offset += 6;
            var count_time33 = toInt(hex.substr(offset, 6)) ; offset += 6;
            var timestampLog = toInt(hex.substr(offset, 8)); offset += 8;
            dataset.push({ PA8_status1: PA8_status1,count_mode: count_mode,tdc_send_flag: tdc_send_flag,trigger_mode: trigger_mode,pa8_alarm_status: pa8_alarm_status,pa8_level_status: pa8_level_status, count_time11: count_time11,count_time22: count_time22,count_time33: count_time33,  timestamp: timestampLog });
			}
        return {
            deviceID: deviceID,
            IMSI:IMSI,
            version: version,
            battery: battery,
            signal: signal,
            mod: mod,
            TTRchannel: TTRchannel,
            PA8_status: PA8_status,
            PA8_status1: PA8_status1, 
            count_mode:count_mode,
            tdc_send_flag:tdc_send_flag,
            trigger_mode:trigger_mode,
            pa8_alarm_status:pa8_alarm_status,
            pa8_level_status:pa8_level_status,
			PA8_door_open_num1: PA8_door_open_num1,
            PA8_last_open_time1: PA8_last_open_time1,
            count_time1: count_time1,
            count_time2: count_time2,
            count_time3: count_time3,
            count_mode1:count_mode1,
            tdc_send_flag1:tdc_send_flag1,
            trigger_mode1:trigger_mode1,
            pa8_alarm_status1:pa8_alarm_status1,
            pa8_level_status1:pa8_level_status1,
            count_time11: count_time11,
            count_time22: count_time22,
            count_time33: count_time33,
            timestamp: timestamp,
            dataset : dataset,
        };
        }
        try {
            var sensorModelHex = versionStr.substr(0, 2);
            var sensorModel = parseInt(sensorModelHex, 16);
            var versionHex = versionStr.substr(2, 2);
            var versionInt = parseInt(versionHex, 16);
            var versionStr = (Math.floor(versionInt / 100)) + '.' + 
                             (Math.floor((versionInt % 100) / 10)) + '.' + 
                             (versionInt % 10);
            console.log('Sensor Model: ' + sensorModel)
            console.log('Version: ' + versionStr)
        } catch(e) {
            console.log("Error parsing version")
            console.log(JSON.stringify(e))
        }
    }
    var payloadHex = bytesToHex(payloadB64);
    var parsedData = parsePayload(payloadHex);
    payload = parsedData
    var deviceID = payload.deviceID;
    var mainIMSI = payload.IMSI;
    var mainBattery = payload.battery;
    var mainSignal = payload.signal;
    var mainPA8_status = payload.PA8_status;
    var mainTTRchannel = payload.TTRchannel;
    var maincount_mode = payload.count_mode;
    var maintdc_send_flag = payload.tdc_send_flag;
    var maintrigger_mode = payload.trigger_mode;
    var mainpa8_alarm_status = payload.pa8_alarm_status;
    var mainpa8_level_status = payload.pa8_level_status;
    var mainPA8_door_open_num = payload.PA8_door_open_num;
    var mainPA8_last_open_time = payload.PA8_last_open_time;
    var maincount_time1 = payload.count_time1;
    var maincount_time2 = payload.count_time2;
    var maincount_time3 = payload.count_time3;
    var mainTimestamp=payload.timestamp
    console.log(mainTimestamp)
    var result = [];
    var mod = payload.mod;
    if (mainTTRchannel == 0)
    {
    
    result.push({
        field: "BATTERY",
        value: mainBattery,
        timestamp: mainTimestamp
    });
    result.push({
        field: "SIGNAL",
        value: mainSignal,
        timestamp: mainTimestamp
    });
    result.push({
        field: "PA8_status",
        value: mainPA8_status,
        timestamp: mainTimestamp
    });
    result.push({
    field: "Count_Mode",
    value: maincount_mode,
    timestamp: mainTimestamp
    });
    result.push({
        field: "TDC_Send_Flag",
        value: maintdc_send_flag,
        timestamp: mainTimestamp
    });
    result.push({
        field: "Trigger_Mode",
        value: maintrigger_mode,
        timestamp: mainTimestamp
    });
    result.push({
        field: "PA8_Alarm_Status",
        value: mainpa8_alarm_status,
        timestamp: mainTimestamp
    });
    result.push({
        field: "PA8_Level_Status",
        value: mainpa8_level_status,
        timestamp: mainTimestamp
    });
    result.push({
        field: "PA8_door_open_num",
        value: mainPA8_door_open_num,
        timestamp: mainTimestamp
    });
     result.push({
        field: "TTRchannel",
        value: mainTTRchannel,
        timestamp: mainTimestamp
    });
    result.push({
        field: "PA8_last_open_time",
        value: mainPA8_last_open_time,
        timestamp: mainTimestamp
    });
    }
   if (mainTTRchannel == 1)
   {
     result.push({
        field: "BATTERY",
        value: mainBattery,
        timestamp: mainTimestamp
    });
    result.push({
        field: "SIGNAL",
        value: mainSignal,
        timestamp: mainTimestamp
    });
   
    result.push({
        field: "PA8_status",
        value: mainPA8_status,
        timestamp: mainTimestamp
    });
    result.push({
    field: "Count_Mode",
    value: maincount_mode,
    timestamp: mainTimestamp
    });
    result.push({
        field: "TDC_Send_Flag",
        value: maintdc_send_flag,
        timestamp: mainTimestamp
    });
    result.push({
        field: "Trigger_Mode",
        value: maintrigger_mode,
        timestamp: mainTimestamp
    });
    result.push({
        field: "PA8_Alarm_Status",
        value: mainpa8_alarm_status,
        timestamp: mainTimestamp
    });
    result.push({
        field: "PA8_Level_Status",
        value: mainpa8_level_status,
        timestamp: mainTimestamp
    });
     result.push({
        field: "TTRchannel",
        value: mainTTRchannel,
        timestamp: mainTimestamp
    });
    result.push({
        field: "count_time1",
        value: maincount_time1,
        timestamp: mainTimestamp
    });
    result.push({
        field: "count_time2",
        value: maincount_time2,
        timestamp: mainTimestamp
    });
    result.push({
        field: "count_time3",
        value: maincount_time3,
        timestamp: mainTimestamp
    });
   }
    var dataset = payload.dataset;
    if  (mainTTRchannel == 0){
    for (var i = 0; i < dataset.length; i++) {
        var data = dataset[i];
        var PA8_status1 = data.PA8_status1;
        var count_mode1 = data.count_mode1;
        var tdc_send_flag1 = data.tdc_send_flag1;
        var trigger_mode1 = data.trigger_mode1;
        var pa8_alarm_status1 = data.pa8_alarm_status1;
        var pa8_level_status1 = data.pa8_level_status1;
        var PA8_door_open_num1 = data.PA8_door_open_num1;
        var PA8_last_open_time1 = data.PA8_last_open_time1;
        var timestamp = data.timestamp;
        console.log(timestamp)
        
    result.push({
        field: "PA8_status",
        value: PA8_status1,
        timestamp: timestamp
    });
    result.push({
        field: "Count_Mode",
        value: count_mode1,
        timestamp: timestamp
    });
    result.push({
        field: "TDC_Send_Flag",
        value: tdc_send_flag1,
        timestamp: timestamp
    });
    result.push({
        field: "Trigger_Mode",
        value: trigger_mode1,
        timestamp: timestamp
    });
    result.push({
        field: "PA8_Alarm_Status",
        value: pa8_alarm_status1,
        timestamp: timestamp
    });
    result.push({
        field: "PA8_Level_Status",
        value: pa8_level_status1,
        timestamp: timestamp
    });
    result.push({
        field: "PA8_door_open_num",
        value: PA8_door_open_num1,
        timestamp: timestamp
    });
    result.push({
        field: "PA8_last_open_time",
        value: PA8_last_open_time1,
        timestamp: timestamp
    });
    }
    var dataset = payload.dataset;
    }
    if (mainTTRchannel == 1){
    for (var i = 0; i < dataset.length; i++) {
        var data = dataset[i];
        var PA8_status1 = data.PA8_status1;
        var count_mode1 = data.count_mode1;
        var tdc_send_flag1 = data.tdc_send_flag1;
        var trigger_mode1 = data.trigger_mode1;
        var pa8_alarm_status1 = data.pa8_alarm_status1;
        var pa8_level_status1 = data.pa8_level_status1;
        var count_time11 = data.count_time11;
        var count_time22 = data.count_time22;
        var count_time33 = data.count_time33;
        var timestamp = data.timestamp;
        console.log(timestamp)
        
    result.push({
        field: "PA8_status",
        value: PA8_status1,
        timestamp: timestamp
    });
    result.push({
        field: "Count_Mode",
        value: count_mode1,
        timestamp: timestamp
    });
    result.push({
        field: "TDC_Send_Flag",
        value: tdc_send_flag1,
        timestamp: timestamp
    });
    result.push({
        field: "Trigger_Mode",
        value: trigger_mode1,
        timestamp: timestamp
    });
    result.push({
        field: "PA8_Alarm_Status",
        value: pa8_alarm_status1,
        timestamp: timestamp
    });
    result.push({
        field: "PA8_Level_Status",
        value: pa8_level_status1,
        timestamp: timestamp
    });
    result.push({
        field: "count_time1",
        value: count_time11,
        timestamp: timestamp
    });
    result.push({
        field: "count_time2",
        value: count_time22,
        timestamp: timestamp
    });
    result.push({
        field: "count_time3",
        value: count_time33,
        timestamp: timestamp
    });
   
    }
    var dataset = payload.dataset;    
    }
    
    
    return result;
}
